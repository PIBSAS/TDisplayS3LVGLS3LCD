name: ESP32 Port

on:
  push:
    branches:
      - main  # Cambia esto según tu rama principal
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_idf44:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3

      - name: Clone lv_micropython repository
        run: git clone https://github.com/lvgl/lv_micropython.git

      - name: Initialize lv_bindings submodule
        run: cd lv_micropython && git submodule update --init --recursive lib/lv_bindings

      - name: Clonar el repositorio
        uses: actions/checkout@v3
        
      - name: Copy Board Configuration
        run: |
          cp -r ESP32_GENERIC_S3_N16R8 lv_micropython/micropython/ports/esp32/boards/
        
      - name: Install packages
        run: cd lv_micropython && source tools/ci.sh && ci_esp32_idf44_setup

      - name: Build
        run: cd lv_micropython && source tools/ci.sh && ci_esp32_build

      - name: Create firmware package
        run: |
          cd lv_micropython
          mkdir -p firmware
          cp build/esp32/firmware.bin firmware/  # Asegúrate de que la ruta sea correcta

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v1.0.0  # Cambia esto a la versión que desees
          release_name: Release v1.0.0  # Cambia esto según sea necesario
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload firmware to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: lv_micropython/firmware/firmware.bin
          asset_name: firmware.bin  # Cambia según lo que quieras que se llame
          asset_content_type: application/octet-stream
